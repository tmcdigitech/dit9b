<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ex 2: Deep Space on TMC - 9 Digital Tech Semester 2</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/</link><description>Recent content in Ex 2: Deep Space on TMC - 9 Digital Tech Semester 2</description><generator>Hugo</generator><language>en-au</language><atom:link href="https://tmcdigitech.github.io/dit9b/deepSpace/index.xml" rel="self" type="application/rss+xml"/><item><title>1: Create project</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/01createProject/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/01createProject/</guid><description>&lt;p>&lt;img src="createProject.png" alt="" />&lt;/p>
&lt;p>Make sure you choose 2D for your template. The new project may take a few minutes to create.&lt;/p></description></item><item><title>2: Get some assets</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/02getSomeAssets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/02getSomeAssets/</guid><description>&lt;p>We need some objects to go in our game. In this example, we&amp;rsquo;ll use assets from &lt;a class="gdoc-markdown__link" href="https://kenney.nl/">kenney.nl&lt;/a>&amp;rsquo;s asset pack &lt;a class="gdoc-markdown__link" href="https://www.kenney.nl/assets/space-shooter-redux">Space Shooter Redux&lt;/a>.&lt;/p>
&lt;p>We need:&lt;/p>
&lt;ul>
&lt;li>ships (us and them)&lt;/li>
&lt;li>asteroids (we&amp;rsquo;re going large, medium, small)&lt;/li>
&lt;li>powerups/tokens&lt;/li>
&lt;li>laser blast&lt;/li>
&lt;li>explosions&lt;/li>
&lt;/ul>
&lt;p>Here are the assets we&amp;rsquo;ll use:&lt;/p>
&lt;p>&lt;img src="player_ship1_green.png" alt="" />
&lt;img src="ufo_red.png" alt="" />&lt;/p>
&lt;p>&lt;img src="meteor_grey_big3.png" alt="" />
&lt;img src="meteor_grey_med1.png" alt="" />
&lt;img src="meteor_grey_small1.png" alt="" />&lt;/p>
&lt;p>&lt;img src="star_gold.png" alt="" />
&lt;img src="things_gold.png" alt="" />&lt;/p>
&lt;p>&lt;img src="laser_green11.png" alt="" />
&lt;img src="laser_red07.png" alt="" />&lt;/p>
&lt;p>Download your assets, and then drag them into the assets panel at the bottom of the Unity screen.&lt;/p></description></item><item><title>3: Understand the Unity UI</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/03unityInterface/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/03unityInterface/</guid><description>&lt;p>Drag the sprite (image) for your player ship into the &lt;strong>Scene&lt;/strong> to create the &lt;code>GameObject&lt;/code> for your player.&lt;/p>
&lt;p>&lt;img src="scene.png" alt="" />&lt;/p>
&lt;p>The white rectangle shows what is visible on the &lt;strong>main camera&lt;/strong>, whose location is shown by the camera image in the centre of the scene. The main camera is what will appear on our &lt;strong>screen&lt;/strong>, so for our basic example, anything inside that white rectangle will be visible on screen, and anything outside will not be.&lt;/p></description></item><item><title>4: Use the inspector</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/04usingTheInspector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/04usingTheInspector/</guid><description>&lt;p>The inspector panel shows information about a selected &lt;code>GameObject&lt;/code>, including all its &lt;a class="gdoc-markdown__link" href="https://tmcdigitech.github.io/dit9b/glossary/components/">components&lt;/a>.&lt;/p>
&lt;p>&lt;img src="inspector.png" alt="" />&lt;/p>
&lt;p>You can adjust values in the inspector by:&lt;/p>
&lt;ul>
&lt;li>typing values directly in an input field&lt;/li>
&lt;li>dragging up/down or left/right on input field&amp;rsquo;s text label,&lt;/li>
&lt;li>dragging an object from the hierarchy or assets panes onto a reference field (the fields with a little &amp;ldquo;target&amp;rdquo; at the right)&lt;/li>
&lt;/ul>
&lt;p>The dragging a label option can be really handy for working out approximately what the value for some property should be, before choosing a specific value for it.&lt;/p></description></item><item><title>5: Add components</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/05addingComponents/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/05addingComponents/</guid><description>&lt;p>Using the Add Component button, add a &lt;code>Rigidbody2D&lt;/code> and a &lt;code>BoxCollider2D&lt;/code> component:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Physics 2D &amp;gt; Rigidbody 2D&lt;/em> to add the &lt;a class="gdoc-markdown__link" href="https://tmcdigitech.github.io/dit9b/glossary/components/#rigidbody2d">Rigidbody2D&lt;/a> component, and&lt;/li>
&lt;li>&lt;em>Physics 2D &amp;gt; BoxCollider 2D&lt;/em> to add a &lt;a class="gdoc-markdown__link" href="https://tmcdigitech.github.io/dit9b/glossary/components/#collider2d">BoxCollider2D&lt;/a> component.&lt;/li>
&lt;/ul>
&lt;p>The Rigidbody component exposes the object to the Physics engine, allowing forces to operate on it. If you press the play button above your scene now, you will see that the force of gravity causes your ship to fall off the bottom of the screen. Press play again to stop.&lt;/p></description></item><item><title>6: Get the player moving</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/06gettingMoving/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/06gettingMoving/</guid><description>&lt;div class="gdoc-page__anchorwrap">
 &lt;h2 id="disable-gravity">
 Disable gravity
 &lt;a data-clipboard-text="https://tmcdigitech.github.io/dit9b/deepSpace/06gettingMoving/#disable-gravity" class="gdoc-page__anchor gdoc-page__anchor--right clip" aria-label="Anchor Disable gravity" href="#disable-gravity">
 &lt;svg class="icon gdoc_link">&lt;use xlink:href="#gdoc_link">&lt;/use>&lt;/svg>
 &lt;/a>
 &lt;/h2>
&lt;/div>&lt;p>At the moment our player moves, but only because of gravity, and there isn&amp;rsquo;t a lot of gravity in space. So let&amp;rsquo;s turn that off. In the menu bar, go to Edit &amp;gt; Project Settings, choose Physics 2D from the sidebar, and set the Y value of Gravity to zero (0).&lt;/p>
&lt;p>&lt;img src="projectSettings.png" alt="" />&lt;/p>
&lt;div class="gdoc-page__anchorwrap">
 &lt;h2 id="create-player-script">
 Create player script
 &lt;a data-clipboard-text="https://tmcdigitech.github.io/dit9b/deepSpace/06gettingMoving/#create-player-script" class="gdoc-page__anchor gdoc-page__anchor--right clip" aria-label="Anchor Create player script" href="#create-player-script">
 &lt;svg class="icon gdoc_link">&lt;use xlink:href="#gdoc_link">&lt;/use>&lt;/svg>
 &lt;/a>
 &lt;/h2>
&lt;/div>&lt;p>With your player&amp;rsquo;s game object selected, from the inspector choose &lt;strong>Add component&lt;/strong>. In the search field, type &amp;ldquo;Player&amp;rdquo;, and then choose &lt;em>New script&lt;/em>, and then &lt;em>Create and Add&lt;/em>.&lt;/p></description></item><item><title>7: Add asteroids</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/07asteroids/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/07asteroids/</guid><description>&lt;p>Let&amp;rsquo;s add some asteroids. Since asteroids are all broadly alike, it&amp;rsquo;d be great if there was a way to set up one up with all the components and scripts we need and then just clone it, and there is: prefabs!&lt;/p>
&lt;p>Drag one the large meteor image into the scene, and rename it &lt;code>asteroidLarge&lt;/code>. In the tag menu, select &amp;ldquo;Add tag&amp;rdquo;. Under &amp;ldquo;tags&amp;rdquo;, it will say &amp;ldquo;List is empty&amp;rdquo;. Click on the + at the right end of that box, and enter &amp;ldquo;Asteroid&amp;rdquo; and hit Save.&lt;/p></description></item><item><title>8: Wrap the screen</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/08screenWrapping.md/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/08screenWrapping.md/</guid><description>&lt;div class="gdoc-toc gdoc-toc__level--6">&lt;nav id="TableOfContents">
 &lt;ul>
 &lt;li>&lt;a href="#player">Player&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#asteroids">Asteroids&lt;/a>&lt;/li>
 &lt;/ul>
&lt;/nav>&lt;hr>&lt;/div>


&lt;p>At the moment, once an asteroid (or your ship) disappears off the edge of the screen, it will continue moving forever and you&amp;rsquo;ll likely never find it again. In some games you might choose to attach the camera to the player so you can move around and keep the player on the screen, but in this case we&amp;rsquo;re going to wrap the screen: when the player moves off one edge, they&amp;rsquo;ll reappear on the other.&lt;/p></description></item><item><title>9: Move asteroids</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/09randomMovement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/09randomMovement/</guid><description>&lt;p>Having the asteroids hang in space as they do looks a litle unrealistic, so let&amp;rsquo;s add some code to the &lt;code>Start()&lt;/code> method to give them some initial movement.&lt;/p>
&lt;p>The first part chooses a random angle from &lt;code>0&lt;/code> to &lt;code>360&lt;/code>, and sets the z-axis rotation to that angle.&lt;/p>
&lt;p>The second part chooses a random speed from &lt;code>0.5&lt;/code> to &lt;code>2&lt;/code>. It then creates a vector pointing up (positive-y) which is the natural forward direction, and then rotates that vector to match the rotation of the asteroid.&lt;/p></description></item><item><title>10: Make a gun</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/10gun/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/10gun/</guid><description>&lt;p>Let&amp;rsquo;s make a gun. Our gun will be slightly odd, in that it won&amp;rsquo;t be attached directly to the ship. Instead, the thing we&amp;rsquo;re going to build will be invisible, and sit just in front of the ship. When we press the fire button (left Ctrl by default), our player will generate a laser blast at the location of the gun, which will then travel forward at speed.&lt;/p>
&lt;p>We need to make sure that the gun object is a &amp;ldquo;child&amp;rdquo; object of the player, so that the gun is attached to the player and moves as the player moves. Right click on the player in the hierarchy, and choose &lt;em>2D Object &amp;gt; Sprites &amp;gt; Square&lt;/em>.&lt;/p></description></item><item><title>11: Make a laser blast</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/11laserBlastPrefab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/11laserBlastPrefab/</guid><description>&lt;p>We now need to make our laser blast. Grab the laser blast you chose (ours is green) and drag it into the scene to make a new game object. Call it &amp;ldquo;playerBlast&amp;rdquo;. As you did for the asteroids, make a tag called &amp;ldquo;LaserBlast&amp;rdquo; and tag your new playerBlast.&lt;/p>
&lt;p>While we&amp;rsquo;re setting things up, go ahead and add a &lt;code>BoxCollider2D&lt;/code> and a &lt;code>Rigidbody2D&lt;/code>.&lt;/p>
&lt;p>Now turn your playerBlast into a prefab (drag it from the hierarchy down into the Assets panel). Since we don&amp;rsquo;t want a random green blast in the middle of the scene, select the blast in the scene and delete it.&lt;/p></description></item><item><title>12: Handle blast collisions</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/12laserCollisions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/12laserCollisions/</guid><description>&lt;p>You can see you can shoot laser blasts, and they collide with the asteroids, causing them to move. They also then bounce off in a weird way that makes them look more like shards of coloured ice than laser blasts!&lt;/p>
&lt;p>Firstly, go to your playerBlast prefab (in the Assets panel). In its collider component, turn on the &amp;ldquo;Is Trigger&amp;rdquo; option. This turns the blast from a physical object that collides into more of a &amp;ldquo;magic region&amp;rdquo; that things can pass through. Imagine the finish line of a race track: you want to be alerted when things cross into and out of it still, but you don&amp;rsquo;t want them to bounce off.&lt;/p></description></item><item><title>13: Limit laser life</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/13limitLaserLife/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/13limitLaserLife/</guid><description>&lt;p>If you&amp;rsquo;re not a particularly accurate shot, those laser blasts you fire will continue to travel for ever, until the scene is unloaded (either due to changing the scene or quitting the game). This feels untidy and, in a big game, can cause resources to be tied up and used on things which aren&amp;rsquo;t relevant anymore. Let&amp;rsquo;s use the same idea used to handle screen wrapping to destroy the laser blasts once they reach the edge of the screen.&lt;/p></description></item><item><title>14: Make debris</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/14debris/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/14debris/</guid><description>&lt;p>Here we&amp;rsquo;re going to implement &amp;ldquo;debris&amp;rdquo;. When an asteroid is destroyed, it can break into smaller pieces, which can also be destroyed (and also potentially break into pieces). In practice, we will use a combination of &lt;code>Destroy()&lt;/code> and &lt;code>Instantiate()&lt;/code> to remove the old asteroid and create three new ones in its place. One is in the direction of the original asteroid, and the other two are mirrored at a random angle from that direction.&lt;/p></description></item><item><title>15: Make debris (part 2)</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/15duplicatePrefabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/15duplicatePrefabs/</guid><description>&lt;p>Select your asteroidLarge prefab and from the menubar choose &lt;em>Edit &amp;gt; Duplicate&lt;/em> (Ctrl-D). Choose the copy (should have a 1 at the end of the name) and choose Open from the inspector. You can now rename it asteroidMedium. It&amp;rsquo;ll ask you if you want to rename the file or keep the old name: choose Rename File. Drag your medium sprite image into the Sprite Renderer&amp;rsquo;s sprite field. You&amp;rsquo;ll now need to adjust the Collider size: Choose &amp;ldquo;Edit Collider&amp;rdquo; in the collider panel in the inspector, and use the green knobs to adjust the size. Click the button again to stop editing.&lt;/p></description></item><item><title>16: Make some noise</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/16sounds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/16sounds/</guid><description>&lt;p>It is fairly easy to make some sound when we fire our lasers. We&amp;rsquo;ll cover some more complex examples later. To make sound you need an AudioSource, which makes sound, and an AudioListener, to hear it. By default, the main camera has an AudioListener attached, and that is perfect for our needs (it usually is, which is why it&amp;rsquo;s there).&lt;/p>
&lt;p>Select your PlayerBlast prefab and add an &lt;em>Audio &amp;gt; AudioSource&lt;/em> component. You&amp;rsquo;ll see it has a reference field called AudioClip. We need to drop our laser blast noise in there, and we&amp;rsquo;re done. Here is one you can use:&lt;/p></description></item><item><title>17: More sounds</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/17moreSounds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/17moreSounds/</guid><description>&lt;p>Let&amp;rsquo;s add a sound for when our asteroids blow up.&lt;/p>
&lt;p>You&amp;rsquo;ll have noticed that we didn&amp;rsquo;t need any code for our LaserBlast sounds, and that might have surprised you. That&amp;rsquo;s because we got lucky, and we didn&amp;rsquo;t need to. In general, you will, and we&amp;rsquo;ll look at that now. If you look at the setup for our LaserBlast, you&amp;rsquo;ll see in the AudioSource that there is an option checked called &amp;ldquo;Play On Awake&amp;rdquo;. This says that whenver our object &amp;ldquo;wakes up&amp;rdquo;, the sound should play and since the Rigidbody component sets our LaserBlast to &amp;ldquo;Start Awake&amp;rdquo; it goes off as soon as our laser blast is constructed, which is exactly what we wanted. Job done, free of charge.&lt;/p></description></item><item><title>18: Show the score</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/18score/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/18score/</guid><description>&lt;p>Let&amp;rsquo;s give the user a sense of how well they&amp;rsquo;re doing; we&amp;rsquo;ll give them a point for every asteroid they shoot.&lt;/p>
&lt;p>We&amp;rsquo;ll start by setting up the score display.
Right click in the hierarchy and choose &lt;em>UI &amp;gt; Text - TextMeshPro&lt;/em>.&lt;/p>
&lt;p>You&amp;rsquo;ll likely be presented with this box:&lt;/p>
&lt;p>&lt;img src="tmpImporter.png" alt="" />&lt;/p>
&lt;p>You&amp;rsquo;ll need to click the &amp;ldquo;Import TMP Essentials&amp;rdquo; button to continue. If you are keen to learn more about TextMesh Pro&amp;rsquo;s features, you can click the second button as well, but if you&amp;rsquo;re just going to rely on this tutorial series, don&amp;rsquo;t worry about it, and just close the window once the essentials have been added.&lt;/p></description></item><item><title>19: Update the score</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/19scoreTrack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/19scoreTrack/</guid><description>&lt;p>Now that we&amp;rsquo;ve got a place to display the score, we need a way of managing the score. The most flexible way to handle this is to make a game object whose job is to manage aspects of the game. A &lt;code>GameManager&lt;/code>!&lt;/p>
&lt;p>In the hierarchy, create an empty game object (right click, choose &amp;ldquo;Create Empty&amp;rdquo;). Call this &amp;ldquo;GameManager&amp;rdquo;.&lt;/p>
&lt;p>Add a script called GameManager to it.&lt;/p>
&lt;p>The game manager will keep track of the score, and have a reference to the score display so it can update the display when the score changes. There is a method called &lt;code>ScoreIncrease()&lt;/code> which can be called by other objects to change the score. This is what our asteroids will use.&lt;/p></description></item><item><title>Assets</title><link>https://tmcdigitech.github.io/dit9b/deepSpace/assets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/deepSpace/assets/</guid><description>&lt;p>Alt-click to download:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="gdoc-markdown__link" href="AsteroidExplosion.prefab">Explosion 1&lt;/a>&lt;/li>
&lt;li>&lt;a class="gdoc-markdown__link" href="SpaceshipExplosion.prefab">Explosion 2&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>