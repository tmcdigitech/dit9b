<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>9 Digital Tech on TMC - 9 Digital Tech Semester 2</title><link>https://tmcdigitech.github.io/dit9b/</link><description>Recent content in 9 Digital Tech on TMC - 9 Digital Tech Semester 2</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><atom:link href="https://tmcdigitech.github.io/dit9b/index.xml" rel="self" type="application/rss+xml"/><item><title>Sequence</title><link>https://tmcdigitech.github.io/dit9b/assessment/progCheckpoint/sequence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/assessment/progCheckpoint/sequence/</guid><description>from The Computing Zone
1. Three in, three out Write a program that will allow a user to enter their name (string), their age (integer) and their favourite TV program (string). The program will then display the information entered and some additional text on separate lines. An example of the input and output from the program is shown below. What is your name? &amp;gt; Lister What is your age? &amp;gt; 39 What is your favourite TV program?</description></item><item><title>Selection</title><link>https://tmcdigitech.github.io/dit9b/assessment/progCheckpoint/selection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/assessment/progCheckpoint/selection/</guid><description>from The Computing Zone
9. Advice please Write a program that asks the user if they would like some advice. If they enter Y, provide them with an amusing message. Would you like some advice? &amp;gt; Y Always know where your towel is. Would you like some advice? &amp;gt; N 10. Darts During a game of darts, the highest score that can be achieved in a single turn is 180. The lowest is 0.</description></item><item><title>Iteration</title><link>https://tmcdigitech.github.io/dit9b/assessment/progCheckpoint/iteration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/assessment/progCheckpoint/iteration/</guid><description>from The Computing Zone
13. Lines cheat A naughty pupil has been given lines to copy as a punishment from their Computing teacher. The have been asked to type out “I must not behave like muppet in class” 20 times. Write a program that asks a pupil to enter a sentence. The same sentence should then be displayed 20 times. What sentence would you like copied? &amp;gt; I must not behave like a muppet in class.</description></item><item><title>Basic input and output</title><link>https://tmcdigitech.github.io/dit9b/pyToCs/inputOutput/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/pyToCs/inputOutput/</guid><description>Output Python print(&amp;#34;Some text&amp;#34;) C# Console.WriteLine(&amp;#34;Some text&amp;#34;) To print to the console in Python, we use the print() function. In C#, console functions are part of the Console class, and the equivalent to Python&amp;rsquo;s print function is Console.WriteLine(). If you don&amp;rsquo;t want it to automatically add a line break, you can use the Console.Write() function.
Input Python response = input(&amp;#34;What is your name? &amp;#34;) C# Console.WriteLine(&amp;#34;What is your name? &amp;#34;) response = Console.</description></item><item><title>UFO assets</title><link>https://tmcdigitech.github.io/dit9b/basics/UFO/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/basics/UFO/</guid><description> Name Image UFO Alien</description></item><item><title>Explicit typing</title><link>https://tmcdigitech.github.io/dit9b/pyToCs/types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/pyToCs/types/</guid><description>Computers store all information as sequences of numbers, and different kinds of information are encoded using different methods. These different kinds of information are known as types, and they exist in all programming languages.
The Python interpreter allows the programmer to ignore many of the issues of typing much of the time, as it can infer a lot from the code. But you would have had to convert numbers into text using the str() function, and this is an example of type conversion.</description></item><item><title>Player movement</title><link>https://tmcdigitech.github.io/dit9b/basics/playerMovement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/basics/playerMovement/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 using System.Collections; using System.Collections.Generic; using UnityEngine; public class Player : MonoBehaviour { public float accel; private Rigidbody2D rb; // Start is called before the first frame update void Start() { rb = GetComponent&amp;lt;Rigidbody2D&amp;gt;(); } // Update is called once per frame void Update() { float inX = Input.</description></item><item><title>if statements</title><link>https://tmcdigitech.github.io/dit9b/pyToCs/if/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/pyToCs/if/</guid><description> Link to view video at TMC
Basic if Python if condition: statements regularFlow C# if( condition ){ statements; } regularFlow; if/else Python if condition: statements else: statements regularFlow C# if( condition ){ statements; }else{ statements; } regularFlow; chained if Python if condition: statements elif otherCondition: statements else: statements regularFlow C# if( condition ){ statements; }else if( otherCondition ){ statements; }else{ statements; } regularFlow;</description></item><item><title>while loops</title><link>https://tmcdigitech.github.io/dit9b/pyToCs/while/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/pyToCs/while/</guid><description> Link to view video at TMC
Python while condition: statements regularFlow C# while( condition ){ statements; } regularFlow;</description></item><item><title>for loops</title><link>https://tmcdigitech.github.io/dit9b/pyToCs/for/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/pyToCs/for/</guid><description>Link to view video at TMC
Python In Python, the range() function is commonly used to make a loop that counts through some number:
range(4) will give the numbers 0, 1, 2, 3 (i.e. 0 to not-quite 4); range(1,4) will give the numbers 1, 2, 3 (i.e. 1 to not-quite 4); range(1,4,2) will give the numbers 1, 3 (i.e. 1 to not-quite 4, increasing by 2). C# C# inherits its truly disgusting for loop layout from C.</description></item><item><title/><link>https://tmcdigitech.github.io/dit9b/pyToCs/example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/pyToCs/example/</guid><description/></item><item><title>2. Deep Space Game</title><link>https://tmcdigitech.github.io/dit9b/assessment/deepSpace/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/assessment/deepSpace/</guid><description/></item><item><title>3: 2D Game Design Project</title><link>https://tmcdigitech.github.io/dit9b/assessment/planning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/assessment/planning/</guid><description/></item><item><title>Asteroid.cs</title><link>https://tmcdigitech.github.io/dit9b/basics/deepSpace/finishedScripts/asteroid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/basics/deepSpace/finishedScripts/asteroid/</guid><description>using System.Collections; using System.Collections.Generic; using UnityEngine; public class Asteroid : MonoBehaviour { public GameObject explosionTemplate; // Start is called before the first frame update void Start() { } // Update is called once per frame void Update() { //Handle screen wrapping int margin = 50; Vector2 screenPos = Camera.main.WorldToScreenPoint(transform.position); if( screenPos.x &amp;gt; Screen.width+margin ){ //off right, move to left screenPos.x = -margin; }else if( screenPos.x &amp;lt; -margin ){ //off left, move to right screenPos.</description></item><item><title>data type</title><link>https://tmcdigitech.github.io/dit9b/glossary/type/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/glossary/type/</guid><description>Data types</description></item><item><title>Installation</title><link>https://tmcdigitech.github.io/dit9b/setup/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/setup/installation/</guid><description>You will need three main tools for developing in Unity, and all can be found on the TMC Company Portal.
Unity Hub Unity Hub is responsible for managing licences and which version of Unity (if you have more than one) is associated with which project. You will start your workflow in Unity Hub, where you will select which project you&amp;rsquo;ll work on, or start a new one.
Unity Unity (also referred to as the Unity Editor) is the heart of things.</description></item><item><title>LaserBlast.cs</title><link>https://tmcdigitech.github.io/dit9b/basics/deepSpace/finishedScripts/laserBlast/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/basics/deepSpace/finishedScripts/laserBlast/</guid><description>using System.Collections; using System.Collections.Generic; using UnityEngine; public class LaserBlast : MonoBehaviour { // Start is called before the first frame update void Start() { } // Update is called once per frame void Update() { //Handle screen wrapping int margin = 50; Vector2 screenPos = Camera.main.WorldToScreenPoint(transform.position); if( screenPos.x &amp;gt; Screen.width+margin || screenPos.x &amp;lt; -margin || screenPos.y &amp;gt; Screen.height+margin || screenPos.y &amp;lt; -margin ){ Destroy(this); } Vector3 newPos = Camera.main.ScreenToWorldPoint(screenPos); transform.position = new Vector2(newPos.</description></item><item><title>Player Movement</title><link>https://tmcdigitech.github.io/dit9b/basics/deepSpace/playerMovement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/basics/deepSpace/playerMovement/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 using System.Collections; using System.Collections.Generic; using UnityEngine; public class Player : MonoBehaviour { public float rotSpeed; public float linSpeed; private Rigidbody2D rb; // Start is called before the first frame update void Start() { rb = GetComponent&amp;lt;Rigidbody2D&amp;gt;(); } // Update is called once per frame void Update() { //Update rotation rb.</description></item><item><title>Player.cs</title><link>https://tmcdigitech.github.io/dit9b/basics/deepSpace/finishedScripts/player/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/basics/deepSpace/finishedScripts/player/</guid><description>using System.Collections; using System.Collections.Generic; using UnityEngine; public class Player : MonoBehaviour { public float rotSpeed; public float linSpeed; private Rigidbody2D rb; public GameObject projectileTemplate; // Start is called before the first frame update void Start() { rb = GetComponent&amp;lt;Rigidbody2D&amp;gt;(); } // Update is called once per frame void Update() { //Update rotation rb.MoveRotation(rb.rotation - Input.GetAxis(&amp;#34;Horizontal&amp;#34;) * rotSpeed * Time.deltaTime); //Update velocity Vector3 pos = transform.position; float y = Input.GetAxis(&amp;#34;Vertical&amp;#34;) * linSpeed * Time.</description></item><item><title>Walkthrough videos</title><link>https://tmcdigitech.github.io/dit9b/basics/videos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/basics/videos/</guid><description>Here is a series of short videos which will get you started building 2D games in Unity.
Starting a project
Unity Hub starting a new project Adding objects and making them interact
adding objects sprites Rigidbody2D colliders User input; complex objects, and lots of them
responding to user input compound objects prefabs constraints Collecting objects
tagging objects collisions</description></item><item><title>Wrapping the screen</title><link>https://tmcdigitech.github.io/dit9b/basics/deepSpace/screenWrapping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/basics/deepSpace/screenWrapping/</guid><description>In some games, when the player or certain objects move off one edge of the screen, they re-emerge on the opposite edge. This can be achieved using the following block of code, placed inside the Update() method of an object&amp;rsquo;s script.
The margin property can be tuned according to preference. The object must go past the edge of the margin, not just the screen, to be teleported to the other edge.</description></item></channel></rss>