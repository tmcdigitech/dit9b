<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>9 Digital Tech on TMC - 9 Digital Tech Semester 2</title><link>https://tmcdigitech.github.io/dit9b/</link><description>Recent content in 9 Digital Tech on TMC - 9 Digital Tech Semester 2</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><atom:link href="https://tmcdigitech.github.io/dit9b/index.xml" rel="self" type="application/rss+xml"/><item><title>Sequence</title><link>https://tmcdigitech.github.io/dit9b/assessment/progCheckpoint/sequence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/assessment/progCheckpoint/sequence/</guid><description>from The Computing Zone
1. Three in, three out Write a program that will allow a user to enter their name (string), their age (integer) and their favourite TV program (string). The program will then display the information entered and some additional text on separate lines. An example of the input and output from the program is shown below. What is your name? &amp;gt; Lister What is your age? &amp;gt; 39 What is your favourite TV program?</description></item><item><title>Software</title><link>https://tmcdigitech.github.io/dit9b/gettingStarted/software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/gettingStarted/software/</guid><description>For this subject, you will need to install Python and Visual Studio Code from the Company Portal.
Open the Company Portal:
Find and install Python:
Find and install Visual Studio Code (NOT Visual Studio Community):
Install the Python extension for Visual Studio Code:</description></item><item><title>Selection</title><link>https://tmcdigitech.github.io/dit9b/assessment/progCheckpoint/selection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/assessment/progCheckpoint/selection/</guid><description>from The Computing Zone
9. Advice please Write a program that asks the user if they would like some advice. If they enter Y, provide them with an amusing message. Would you like some advice? &amp;gt; Y Always know where your towel is. Would you like some advice? &amp;gt; N 10. Darts During a game of darts, the highest score that can be achieved in a single turn is 180. The lowest is 0.</description></item><item><title>Iteration</title><link>https://tmcdigitech.github.io/dit9b/assessment/progCheckpoint/iteration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/assessment/progCheckpoint/iteration/</guid><description>from The Computing Zone
13. Lines cheat A naughty pupil has been given lines to copy as a punishment from their Computing teacher. The have been asked to type out “I must not behave like muppet in class” 20 times. Write a program that asks a pupil to enter a sentence. The same sentence should then be displayed 20 times. What sentence would you like copied? &amp;gt; I must not behave like a muppet in class.</description></item><item><title>Text-based quiz games</title><link>https://tmcdigitech.github.io/dit9b/gameDesign/02basics/textBasedGames/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/gameDesign/02basics/textBasedGames/</guid><description>from Coding Games with Pygame Zero &amp;amp; Python, by Richard Smith
These programs can be entered using any text editor, but I suggest using the Mu editor because it comes with Python, Pygame Zero and other libraries all pre-installed in one easy download.
3.1. Hello, world The traditional first program used to make sure Python is working and that we can run programs.
If using the Mu editor:
Click the mode button and make sure the mode is set to Python3.</description></item><item><title>Drawing graphics</title><link>https://tmcdigitech.github.io/dit9b/gameDesign/02basics/graphics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/gameDesign/02basics/graphics/</guid><description>adapted from Coding Games with Pygame Zero &amp;amp; Python, by Richard Smith
To create graphics for our games we will use the Pygame Zero library. You will find the documentation on the website useful!
The smallest square that can be displayed on a monitor is called a pixel. This diagram shows a close-up view of a window that is 40 pixels wide and 40 pixels high. At normal size you will not see the grid lines.</description></item><item><title>Drawing graphics (slides)</title><link>https://tmcdigitech.github.io/dit9b/gameDesign/02basics/graphicsSlides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/gameDesign/02basics/graphicsSlides/</guid><description>Drawing graphics adapted from Coding Games with Pygame Zero &amp;amp; Python, by Richard Smith
The smallest square that can be displayed on a monitor is called a pixel. This diagram shows a close-up view of a window that is 40 pixels wide and 40 pixels high. At normal size you will not see the grid lines.
We can refer to any pixel by giving two co-ordinates,
(x, y)
Make sure you understand co-ordinates before moving on because everything we do in Pygame Zero will use it.</description></item><item><title>Arcade games</title><link>https://tmcdigitech.github.io/dit9b/gameDesign/02basics/arcade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/gameDesign/02basics/arcade/</guid><description>adapted from Coding Games with Pygame Zero &amp;amp; Python, by Richard Smith
Keyboard input The alien moves when you press the cursor keys.
Program 4.5 Keyboard input
1 2 3 4 5 6 7 8 9 10 11 12 alien = Actor(&amp;#39;alien&amp;#39;) alien.pos = (0, 50) def draw(): screen.clear() alien.draw() def update(): if keyboard.right: alien.x = alien.x + 2 elif keyboard.left: alien.x = alien.x - 2 Exercise Make the alien move up and down as well as left and right.</description></item><item><title>2. Deep Space Game</title><link>https://tmcdigitech.github.io/dit9b/assessment/deepSpace/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/assessment/deepSpace/</guid><description/></item><item><title>3: 2D Game Design Project</title><link>https://tmcdigitech.github.io/dit9b/assessment/planning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/assessment/planning/</guid><description/></item><item><title>bottle.run()</title><link>https://tmcdigitech.github.io/dit9b/glossary/bottleRun/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/glossary/bottleRun/</guid><description>run(reloader=True, debug=True) You can just say run(), and it will begin using a set of defaults, but we have customised the server slightly. The reloader flag tells the server to restart every time we change a code file, which saves us from turning it off and on again every time we modify our code. Very handy for development! The debug flag does a something thing for templates.
There are a lot of other flags you can use, but two that you might find handy are:</description></item><item><title>Installation</title><link>https://tmcdigitech.github.io/dit9b/setup/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/setup/installation/</guid><description>You will need three main tools for developing in Unity, and all can be found on the TMC Company Portal.
Unity Hub Unity Hub is responsible for managing licences and which version of Unity (if you have more than one) is associated with which project. You will start your workflow in Unity Hub, where you will select which project you&amp;rsquo;ll work on, or start a new one.
Unity Unity (also referred to as the Unity Editor) is the heart of things.</description></item><item><title>Software</title><link>https://tmcdigitech.github.io/dit9b/gameDesign/01gettingStarted/software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/gameDesign/01gettingStarted/software/</guid><description>To develop games using Pygame Zero, you have two main options:
use Mu use another editor Mu is set up to be very helpful for beginners. It has some keyboard shortcuts, good help text, nice shortcut buttons, and is generaly very friendly to use and has a lot of features to help beginners get started.
After you have been writing code for a while, you may find that a standard Python environment and a &amp;ldquo;full&amp;rdquo; text editor like Visual Studio Code allows you a lot more power and flexibility, at the cost of doing some more basic things yourself.</description></item><item><title>Strings</title><link>https://tmcdigitech.github.io/dit9b/reference/strings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/reference/strings/</guid><description>adapted from Medium.com
Let us see the different operations that can be performed on the below string.
word = &amp;#39;Sample&amp;#39; len(word) # 6 +---+---+---+---+---+---+ | S | a | m | p | l | e | +---+---+---+---+---+---+ 0 1 2 3 4 5 6 -6 -5 -4 -3 -2 -1 1 Concatenation Join a string with another string
word = &amp;#39;Sample&amp;#39; word + &amp;#39; &amp;#39; + &amp;#39;trick&amp;#39; # &amp;#39;Sample trick&amp;#39; 2 Indexed Access of Strings A string in a python can be indexed to perform operations on the string.</description></item><item><title>Structuring your files</title><link>https://tmcdigitech.github.io/dit9b/gameDesign/01gettingStarted/fileStructure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/gameDesign/01gettingStarted/fileStructure/</guid><description>Each of your projects should live in its own folder somewhere sensible (like in a Digital Tech folder in your OneDrive!).
Digital Tech/ │ ├── firstGame/ │ └── game.py │ ├── secondGame/ │ └── game.py │ ├── thirdGame/ │ └── game.py │ └── fourthGame/ └── game.py Within each of those folders, there will be python file with your game code in it, but there may well be other files and folders as well.</description></item><item><title>URLs</title><link>https://tmcdigitech.github.io/dit9b/glossary/URLs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit9b/glossary/URLs/</guid><description>\[\overbrace{\text{https}}^{\text{scheme}}\text{://} \overbrace{\text{tmcdigitech.github.io}}^{\text{address}} \text{:}\overbrace{\text{8080}}^{\text{port}} \overbrace{\text{/dit10a/glossary/URLs/}}^{\text{path/endpoint}}\] The scheme tells the browser how it will connect to the server. This is typically https, but could also be http, ftp, mailto, or any number of others.
The address tells the browser where to send the request, i.e. which address. Addresses can be in the form of domain names like google.com, or IP addresses like 192.168.0.1.
google.com is like saying Thomas More College. 192.168.0.1 is like saying 35 Amsterdam Crescent, Salisbury Downs.</description></item></channel></rss>